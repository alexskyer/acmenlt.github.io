(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{393:function(s,t,a){"use strict";a.r(t);var n=a(45),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("继 SpringCloud Feign 之后的第二篇分布式框架文章，同样秉承单周末一个 SpringCloud 组件的大目标为原则")]),s._v(" "),a("p",[s._v("如果想看 Feign 的小伙伴，"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/zYfhJDyHji58Skw3IqIWzg",target:"_blank",rel:"noopener noreferrer"}},[s._v("猛戳这里"),a("OutboundLink")],1),s._v("，Feign 核心原理与你不期而遇")]),s._v(" "),a("p",[s._v("在平常使用 SpringCloud 中，一般会使用 Feign，因为 Feign 内部集成了 Ribbon")]),s._v(" "),a("p",[s._v("但是 Ribbon 又是一个不可忽视的知识点，并且比 Feign 要难很多。列举文章大纲主题")]),s._v(" "),a("blockquote",[a("ol",[a("li",[s._v("如何获取注册中心服务实例")]),s._v(" "),a("li",[s._v("非健康服务实例如何下线")]),s._v(" "),a("li",[s._v("Ribbon 底层原理实现")]),s._v(" "),a("li",[s._v("自定义 Ribbon 负载均衡策略")])])]),s._v(" "),a("p",[s._v("文章使用 SpringCloud Ribbon 源代码 Hoxton.SR9 版本："),a("strong",[s._v("2.2.6.RELEASE")])]),s._v(" "),a("p",[a("em",[s._v("另外在文章结尾，说了一些看源码过程中的感想，以及 Ribbon 中笔者实现不合理的流程说明")])]),s._v(" "),a("h2",{attrs:{id:"概念小贴士"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念小贴士"}},[s._v("#")]),s._v(" 概念小贴士")]),s._v(" "),a("h3",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[s._v("#")]),s._v(" 负载均衡")]),s._v(" "),a("p",[s._v("负载均衡是指通过负载均衡策略分配到多个执行单元上，常见的负载均衡方式有两种")]),s._v(" "),a("ul",[a("li",[s._v("独立进程单元，通过负载均衡策略，将请求进行分发到不同执行上，类似于 Nginx")]),s._v(" "),a("li",[s._v("客户端行为，将负载均衡的策略绑定到客户端上，客户端会维护一份服务提供者列表，通过客户端负载均衡策略分发到不同的服务提供者")])]),s._v(" "),a("h3",{attrs:{id:"ribbon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ribbon"}},[s._v("#")]),s._v(" Ribbon")]),s._v(" "),a("p",[s._v("Ribbon 是 Netflix 公司开源的一款负载均衡组件，负载均衡的行为在客户端发生，所以属于上述第二种")]),s._v(" "),a("p",[s._v("一般而言，SpringCloud 构建以及使用时，会使用 Ribbon 作为客户端负载均衡工具。但是不会独立使用，而是结合 RestTemplate 以及 Feign 使用，Feign 底层集成了 Ribbon，不用额外的配置，开箱即用")]),s._v(" "),a("p",[s._v("文章为了更贴切 Ribbon 主题，所以使用 RestTemplate 充当网络调用工具")]),s._v(" "),a("p",[s._v("RestTemplate 是 Spring Web 下提供访问第三方 RESTFul Http 接口的网络框架")]),s._v(" "),a("h2",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[s._v("#")]),s._v(" 环境准备")]),s._v(" "),a("p",[s._v("注册中心选用阿里 Nacos，创建两个服务，生产者集群启动，消费者使用 RestTemplate + Ribbon 调用，调用总体结构如下")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210122182633581.png",alt:""}})]),s._v(" "),a("p",[s._v("生产者代码如下，将服务注册 Nacos，并对外暴露 Http Get 服务")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210123112352094.png",alt:""}})]),s._v(" "),a("p",[s._v("消费者代码如下，将服务注册 Nacos，通过 RestTemplate + Ribbon 发起远程负载均衡调用")]),s._v(" "),a("p",[s._v("RestTemplate 默认是没有负载均衡的，所以需要添加 @LoadBalanced")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210123112532490.png",alt:""}})]),s._v(" "),a("p",[s._v("启动三个生产者实例注册 Nacos，启动并且注册成功如下所示")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210123123103613.png",alt:""}})]),s._v(" "),a("p",[s._v("想要按严格的先后顺序介绍框架原理，而不超前引用尚未介绍过的术语，"),a("strong",[s._v("这几乎是不可能的")]),s._v("，笔者尽可能介绍明白")]),s._v(" "),a("h2",{attrs:{id:"如何获取注册中心服务实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何获取注册中心服务实例"}},[s._v("#")]),s._v(" 如何获取注册中心服务实例")]),s._v(" "),a("p",[s._v("先来看一下 Ribbon 是如何在客户端获取到注册中心运行实例的，这个点在之前是我比较疑惑的内容")]),s._v(" "),a("blockquote",[a("p",[s._v("服务注册相关的知识点，会放到 Nacos 源码解析说明")])]),s._v(" "),a("p",[s._v("先来举个例子，当我们执行一个请求时，肯定要进行负载均衡对吧，这个时候代码跟到负载均衡获取服务列表源码的地方")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124134853454.png",alt:""}})]),s._v(" "),a("p",[s._v("解释一下上面标黄色框框的地方：")]),s._v(" "),a("ul",[a("li",[s._v("RibbonLoadBalancerClient：负责负载均衡的请求处理")]),s._v(" "),a("li",[s._v("ILoadBalancer：接口中定义了一系列实现负载均衡的方法，相当于一个路由的作用，Ribbon 中默认实现类 ZoneAwareLoadBalancer")]),s._v(" "),a("li",[s._v("unknown：ZoneAwareLoadBalancer 是多区域负载均衡器，这个 unkonwn 代表默认区域的意思")]),s._v(" "),a("li",[s._v("allServerList：代表了从 Nacos 注册中心获取的接口服务实例，upServerList 代表了健康实例")])]),s._v(" "),a("p",[s._v("现在想要知道 Ribbon 是如何获取服务实例的就需要跟进 "),a("strong",[s._v("getLoadBalancer()")])]),s._v(" "),a("h3",{attrs:{id:"getloadbalancer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getloadbalancer"}},[s._v("#")]),s._v(" getLoadBalancer")]),s._v(" "),a("p",[s._v("首先声明一点，getLoadBalancer() 方法的语意是从 Ribbon 父子上下文容器中获取名称为 "),a("strong",[s._v("ribbon-produce")]),s._v("，类型为 "),a("strong",[s._v("ILoadBalancer.class")]),s._v(" 的 Spring Bean")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124141655558.png",alt:""}})]),s._v(" "),a("p",[s._v("之前在讲 Feign 的时候说过，Ribbon 会为每一个服务提供者创建一个 Spring 父子上下文，这里会从子上下文中获取 Bean")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124142007712.png",alt:""}})]),s._v(" "),a("p",[s._v("看到这里并没有解决我们的疑惑，以为方法里会有拉取服务列表的代码，然鹅只是返回一个包含了服务实例的 Bean，所以我们只能去跟下这个 Bean 的上下文")]),s._v(" "),a("p",[s._v("我们需要从负载均衡客户端着手，因为默认是 ZoneAwareLoadBalancer，那我们需要跟进它何时被创建，初始化都做了什么事情")]),s._v(" "),a("h3",{attrs:{id:"zoneawareloadbalancer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zoneawareloadbalancer"}},[s._v("#")]),s._v(" ZoneAwareLoadBalancer")]),s._v(" "),a("p",[s._v("ZoneAwareLoadBalancer 是一个根据区域（Zone）来进行负载均衡器，因为如果不同机房跨区域部署服务列表，跨区域的方式访问会产生更高的延迟，ZoneAwareLoadBalancer 就是为了解决此类问题，不过默认都是同一区域")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124171342217.png",alt:""}})]),s._v(" "),a("p",[s._v("ZoneAwareLoadBalancer 很重要，或者说它代表的 "),a("strong",[s._v("负载均衡路由角色")]),s._v(" 很重要。进行服务调用前，会使用该类根据负载均衡算法获取可用 Server 进行远程调用，所以我们要掌握创建这个负载均衡客户端时都做了哪些")]),s._v(" "),a("p",[s._v("ZoneAwareLoadBalancer 是在服务第一次被调用时通过子容器创建")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@ConditionalOnMissingBean")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RibbonClientConfiguration 被加载，从 IOC 容器中获取对应实例填充到 ZoneAwareLoadBalancer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILoadBalancer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ribbonLoadBalancer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IClientConfig")]),s._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" serverList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerListFilter")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" serverListFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IRule")]),s._v(" rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IPing")]),s._v(" ping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerListUpdater")]),s._v(" serverListUpdater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZoneAwareLoadBalancer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" serverList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            serverListFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" serverListUpdater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZoneAwareLoadBalancer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IClientConfig")]),s._v(" clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IRule")]),s._v(" rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                             "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IPing")]),s._v(" ping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" serverList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerListFilter")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                             "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerListUpdater")]),s._v(" serverListUpdater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用父类构造方法")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" serverList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" serverListUpdater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("在 DynamicServerListLoadBalancer 中调用了父类 BaseLoadBalancer 初始化了一部分配置以及方法，另外自己也初始化了 Server 服务列表等元数据")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DynamicServerListLoadBalancer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IClientConfig")]),s._v(" clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IRule")]),s._v(" rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IPing")]),s._v(" ping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" serverList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerListFilter")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerListUpdater")]),s._v(" serverListUpdater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用父类 BaseLoadBalancer 初始化一些配置，包括 Ping（检查服务是否可用）Rule（负载均衡规则）")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 较重要，获取注册中心服务的接口")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("serverListImpl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" serverList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("serverListUpdater "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" serverListUpdater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractServerListFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractServerListFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setLoadBalancerStats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLoadBalancerStats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化步骤分了两步走，第一步在上面，这一步就是其余的初始化")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("restOfInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("先来说一下 BaseLoadBalancer 中初始化的方法，这里主要对一些重要参数以及 Ping、Rule 赋值，另外根据 IPing 实现类执行定时器，下面介绍 Ping 和 Rule 是什么")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124173636638.png",alt:""}})]),s._v(" "),a("p",[s._v("方法大致做了以下几件事情：")]),s._v(" "),a("ol",[a("li",[s._v("设置客户端配置对象、名称等关键参数")]),s._v(" "),a("li",[s._v("获取每次 Ping 的间隔以及 Ping 的最大时间")]),s._v(" "),a("li",[s._v("设置具体负载均衡规则 IRule，默认 ZoneAvoidanceRule，根据 server 和 zone 区域来轮询")]),s._v(" "),a("li",[s._v("设置具体 Ping 的方式，默认 DummyPing，直接返回 True")]),s._v(" "),a("li",[s._v("根据 Ping 的具体实现，执行定时任务 Ping Server")])]),s._v(" "),a("p",[s._v("这里会介绍被填入的 IPing 和 IRule 是什么东东，并且都有哪些实现")]),s._v(" "),a("h3",{attrs:{id:"iping-服务探测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iping-服务探测"}},[s._v("#")]),s._v(" IPing 服务探测")]),s._v(" "),a("p",[s._v("IPing 接口负责向 Server 实例发送 ping 请求，判断 Server 是否有响应，以此来判断 Server 是否可用")]),s._v(" "),a("p",[s._v("接口只有一个方法 isAlive，通过实现类完成探测 ping 功能")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IPing")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isAlive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),s._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("IPing 实现类如下：")]),s._v(" "),a("ul",[a("li",[s._v("PingUrl：通过 ping 的方式，发起网络调用来判断 Server 是否可用（一般而言创建 PingUrl 需要指定路径，默认是 IP + Port）")]),s._v(" "),a("li",[s._v("PingConstant：固定返回某服务是否可用，默认返回 True，表示可用")]),s._v(" "),a("li",[s._v("NoOpPing：没有任何操作，直接返回 True，表示可用")]),s._v(" "),a("li",[s._v("DummyPing：默认的类，直接返回 True，实现了 initWithNiwsConfig 方法")])]),s._v(" "),a("h3",{attrs:{id:"irule-负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#irule-负载均衡"}},[s._v("#")]),s._v(" IRule 负载均衡")]),s._v(" "),a("p",[s._v("IRule 接口负责根据不用的算法和逻辑处理负载均衡的策略，自带的策略有 7 种，默认 ZoneAvoidanceRule")]),s._v(" "),a("ol",[a("li",[s._v("BestAvailableRule：选择服务列表中最小请求量的 Server")]),s._v(" "),a("li",[s._v("RandomRule：服务列表中随机选择 Server")]),s._v(" "),a("li",[s._v("RetryRule：根据轮询的方式重试 Server")]),s._v(" "),a("li",[s._v("ZoneAvoidanceRule：根据 Server 的 Zone 区域和可用性轮询选择 Server")]),s._v(" "),a("li",[s._v("...")])]),s._v(" "),a("p",[s._v("上面说过，会有两个初始化步骤，刚才只说了一个，接下来说一下 这个其余初始化方法 "),a("code",[s._v("restOfInit")]),s._v("，虽然取名叫其余初始化，但是就重要性而言，那是相当重要")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("restOfInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IClientConfig")]),s._v(" clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" primeConnection "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isEnablePrimingConnections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// turn this off to avoid duplicated asynchronous priming done in BaseLoadBalancer.setServerList()")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setEnablePrimingConnections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化服务列表，并启用定时器，对服务列表作出更新")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("enableAndInitLearnNewServersFeature")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新服务列表，enableAndInitLearnNewServersFeature 中定时器的执行的就是此方法")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateListOfServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("primeConnection "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPrimeConnections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPrimeConnections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("primeConnections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getReachableServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setEnablePrimingConnections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("primeConnection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    LOGGER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DynamicServerListLoadBalancer for client {} initialized: {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" clientConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClientName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("获取服务列表以及定时更新服务列表的代码都在此处，值得仔细看着源码。关注其中更新服务列表方法就阔以了")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateListOfServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" servers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serverListImpl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取服务列表数据")]),s._v("\n        servers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" serverListImpl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getUpdatedListOfServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        LOGGER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"List of Servers for {} obtained from Discovery client: {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getIdentifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" servers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            servers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFilteredListOfServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("servers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            LOGGER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Filtered List of Servers for {} obtained from Discovery client: {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getIdentifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" servers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新所有服务列表")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateAllServerList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("servers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("第一个问题兜兜转转，终于要找到如何获取的服务列表了，"),a("strong",[s._v("serverListImpl 实现自 ServerList")]),s._v("，因为我们使用的 Nacos 注册中心，所以 ServerList 的具体实现就是 "),a("strong",[s._v("NacosServerList")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInitialListOfServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getUpdatedListOfServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("ServerList 中只有两个接口方法，分别是 "),a("strong",[s._v("获取初始化服务列表集合、获取更新的服务列表集合")]),s._v("，Nacos 实现中两个调用都是一个实现方法，可能设计如此")]),s._v(" "),a("p",[s._v("相当于 Ribbon 提供出接口 ServerList，注册中心开发者们谁想和 Ribbon 集成，那你就实现这个接口吧，到时候 Ribbon 负责调用 ServerList 实现类中的方法实现")]),s._v(" "),a("blockquote",[a("p",[s._v("Ribbon 和各服务注册中心之间，这种实现方式和 JDBC 与各数据库之间很像")])]),s._v(" "),a("p",[s._v("兜兜转转中问题已经明朗，一起总结下注册中心获取服务实例这块内容")]),s._v(" "),a("ol",[a("li",[s._v("负载均衡客户端在初始化时向 "),a("strong",[s._v("Nacos 注册中心获取服务注册列表信息")])]),s._v(" "),a("li",[s._v("根据不同的 IPing 实现，向获取到的服务列表 "),a("strong",[s._v("串行发送 ping")]),s._v("，以此来判断服务的可用性。没错，就是串行，如果你的实例很多，可以 "),a("strong",[s._v("考虑重写 ping 这一块的逻辑")])]),s._v(" "),a("li",[s._v("如果服务的可用性 "),a("strong",[s._v("发生了改变或者被人为下线")]),s._v("，那么重新拉取或更新服务列表")]),s._v(" "),a("li",[s._v("当负载均衡客户端有了这些服务注册类列表，自然就可以进行 "),a("strong",[s._v("IRule 负载均衡策略")])])]),s._v(" "),a("h2",{attrs:{id:"非健康服务实例如何下线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非健康服务实例如何下线"}},[s._v("#")]),s._v(" 非健康服务实例如何下线")]),s._v(" "),a("p",[s._v("首先笔者做了两个 "),a("strong",[s._v('"大胆" 的实验')]),s._v("，第一次是对生产者 SpringBoot 项目执行关闭流程，这时候 Nacos 注册中心是 "),a("strong",[s._v("实时感知到并将此服务下该实例删除")])]),s._v(" "),a("p",[s._v("证明 Nacos 客户端是有 "),a("strong",[s._v("类似于钩子函数的存在")]),s._v("，感知项目停止就会向 Nacos 服务端注销实例。但是这个时候要考虑一件事情，那就是在 "),a("strong",[s._v("暴力 Kill 或者执行关闭操作")]),s._v(" 的情况下，"),a("strong",[s._v("存在于 Ribbon 客户端服务列表缓存能不能感知")])]),s._v(" "),a("p",[s._v("第二次我这边测试流程是这样的，可以极大程度还原生产上使用 Ribbon 可能会遇到的问题")]),s._v(" "),a("ol",[a("li",[s._v("改变客户端负载均衡策略为 "),a("strong",[s._v("随机负载 RandomRule")]),s._v("，大家自己可以进行测试，不固定负载规则")]),s._v(" "),a("li",[s._v("注册三个生产者服务实例到 Nacos 上，检查 "),a("strong",[s._v("确保服务组下实例正常注册")])]),s._v(" "),a("li",[s._v("操作重点来了，先通过消费方实例请求下对应的生产者接口，保证 "),a("strong",[s._v("Ribbon 将对应 Server 缓存到客户端")])]),s._v(" "),a("li",[s._v("停掉一个生产者服务，此时 "),a("strong",[s._v("马上使用 Jmeter 调用")]),s._v("，Jmeter 线程组发起请求 100 次（一定要赶到更新 Server 缓存之前发起 Jmeter 请求）")]),s._v(" "),a("li",[s._v("这时就会看到会发生随机失败，也就是说停掉一个服务后，"),a("strong",[s._v("最坏结果会有 30 秒的生产服务不可用")]),s._v("，这个时间可配置，后面会讲到为什么 30 秒")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210125103040301.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"服务列表定时维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务列表定时维护"}},[s._v("#")]),s._v(" 服务列表定时维护")]),s._v(" "),a("p",[s._v("针对于服务列表的维护，在 Ribbon 中有两种方式，都是通过定时任务的形式维护客户端列表缓存")]),s._v(" "),a("ol",[a("li",[s._v("使用 IPing 的实现类 PingUrl，"),a("strong",[s._v("每隔 10 秒会去 Ping 服务地址")]),s._v("，如果返回状态不是 200，那么默认该实例下线")]),s._v(" "),a("li",[s._v("Ribbon 客户端内置的扫描，"),a("strong",[s._v("默认每隔 30 秒去拉取 Nacos 也就是注册中心的服务实例")]),s._v("，如果已下线实例会在客户端缓存中剔除")])]),s._v(" "),a("p",[s._v("这一块源码都不贴了，放两个源代码位置，感兴趣自己看看就行了")]),s._v(" "),a("div",{staticClass:"language-diff line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(" DynamicServerListLoadBalancer#enableAndInitLearnNewServersFeature\n")]),a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(" BaseLoadBalancer#setupPingTask\n")])])])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你面试的时候，面试官问了本小节相关内容，把这两个点都能答出来，基本上 SpringCloud 源码就差不多了")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210125180520015.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"ribbon-底层原理实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-底层原理实现"}},[s._v("#")]),s._v(" Ribbon 底层原理实现")]),s._v(" "),a("p",[s._v("底层原理实现这一块内容，会先说明使用 Ribbon "),a("strong",[s._v("负载均衡调用远端请求的全过程")]),s._v("，然后着重看一下 RandomRule "),a("strong",[s._v("负载策略底层是如何实现")])]),s._v(" "),a("ol",[a("li",[s._v("创建 ILoadBalancer 负载均衡客户端，初始化 Ribbon 中所需的 "),a("strong",[s._v("定时器和注册中心上服务实例列表")])]),s._v(" "),a("li",[s._v("从 ILoadBalancer 中，通过 "),a("strong",[s._v("负载均衡选择出健康服务列表中的一个 Server")])]),s._v(" "),a("li",[a("strong",[s._v("将服务名（ribbon-produce）替换为 Server 中的 IP + Port")]),s._v("，然后生成 HTTP 请求进行调用并返回数据")])]),s._v(" "),a("p",[s._v("上面已经说过，ILoadBalancer 是负责负载均衡路由的，内部会使用 IRule 实现类进行负载调用")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILoadBalancer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chooseServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("chooseServer 流程中调用的就是 IRule 负载策略中的 choose 方法，在方法内部获取一个健康 Server")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("choose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILoadBalancer")]),s._v(" lb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),s._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("server "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" upList "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" lb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getReachableServers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取服务列表健康实例        List<Server> allList = lb.getAllServers();  // 获取服务列表全部实例        int serverCount = allList.size();  // 全部实例数量        if (serverCount == 0) {  // 全部实例数量为空，返回 null，相当于错误返回            return null;        }        int index = chooseRandomInt(serverCount);  // 考虑到效率问题，使用多线程 ThreadLocalRandom 获取随机数        server = upList.get(index);  // 获取健康实例        if (server == null) {            // 作者认为出现获取 server 为空，证明服务列表正在调整，但是！这只是暂时的，所以当前释放出了 CPU            Thread.yield();            continue;        }        if (server.isAlive()) {  // 服务为健康，返回            return (server);        }        ...    }    return server;}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("简单说一下随机策略 choose 中流程")]),s._v(" "),a("ol",[a("li",[s._v("获取到全部服务、健康服务列表，"),a("strong",[s._v("判断全部实例数量是否等于 0")]),s._v("，是则返回 null，相当于发生了错误")]),s._v(" "),a("li",[s._v("从全部服务列表里获取下标索引，然后去 "),a("strong",[s._v("健康实例列表获取 Server")])]),s._v(" "),a("li",[s._v("如果获取到的 Server 为空会放弃 CPU，然后再来一遍上面的流程，"),a("strong",[s._v("相当于一种重试机制")])]),s._v(" "),a("li",[s._v("如果获取到的 Server 不健康，设置 Server 等于空，再歇一会，继续走一遍上面的流程")])]),s._v(" "),a("p",[s._v("比较简单，有小伙伴可能就问了，如果健康实例小于全部实例怎么办？这种情况下存在两种可能")]),s._v(" "),a("ol",[a("li",[s._v("运气比较好，从全部实例数量中随机了比较小的数，刚好健康实例列表有这个数，那么返回 Server")]),s._v(" "),a("li",[s._v("运气比较背，从全部实例数量中随机了某个数，健康实例列表数量为空或者小于这个数，直接会下标越界异常")])]),s._v(" "),a("p",[s._v("留下一个思考题：")]),s._v(" "),a("p",[a("strong",[s._v("为什么不直接从健康实例中选择实例呢")])]),s._v(" "),a("p",[s._v("如果直接从健康实例列表选择，就能规避下标越界异常，为什么作者要先从全部实例中获取 Server 下标？")]),s._v(" "),a("h2",{attrs:{id:"自定义-ribbon-负载均衡策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义-ribbon-负载均衡策略"}},[s._v("#")]),s._v(" 自定义 Ribbon 负载均衡策略")]),s._v(" "),a("p",[s._v("这种自定义策略，在框架中都支持的比较友好，根据上面提的问题，我们自定义一款策略")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Slf4jpublic")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRule")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractLoadBalancerRule")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("choose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILoadBalancer")]),s._v(" loadBalancer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLoadBalancer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Server")]),s._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 获取已启动并且可访问的服务列表            List<Server> reachableServers = loadBalancer.getReachableServers();            if (CollectionUtils.isEmpty(reachableServers)) return null;            int idx = ThreadLocalRandom.current().nextInt(reachableServers.size());            server = reachableServers.get(idx);            if (server == null || server.isAlive()) {                log.warn("Ribbon 服务实例异常, 获取为空 || 状态不健康");                Thread.yield();                continue;            }            return server;        }    }    ... initWithNiwsConfig 不用实现}')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("说一下我们自己实现的 MyRule 负载的逻辑：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("IRule 获取服务列表没有在调用方实现")]),s._v("，而是抽象 AbstractLoadBalancerRule，所以我们要获取服务列表继承就好了")]),s._v(" "),a("li",[s._v("和随机负载规则大致相似，只不过这里简化了流程，"),a("strong",[s._v("直接从健康的服务实例列表获取 Server 实例")])]),s._v(" "),a("li",[a("strong",[s._v("确定 Server 不为空并且节点健康后返回")]),s._v("，如果不符合则打印日志，睡一会再重复")]),s._v(" "),a("li",[s._v("如果保险起见，"),a("strong",[s._v("最好在 while 中加入一个循环次数的条件")]),s._v("，避免死循环")])]),s._v(" "),a("p",[s._v("然后把 MyRule 注册到 SPring IOC 容器中就好了，在初始化时就会代替默认的 Rule 负载规则")]),s._v(" "),a("h2",{attrs:{id:"关于-iping-的思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-iping-的思考"}},[s._v("#")]),s._v(" 关于 IPing 的思考")]),s._v(" "),a("p",[s._v("在阅读 Ribbon Ping 这一块源代码时，发现了两处个人认为不太合理的地方")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("setPingInterval")]),s._v(" 设置 Ping 间隔时执行设置 Ping 任务无意义")]),s._v(" "),a("li",[a("strong",[s._v("BaseLoadBalancer")]),s._v(" 构造函数中 ping 为 null，"),a("strong",[s._v("又再次调用了 setPingInterval")]),s._v("，结果只会返回空")])]),s._v(" "),a("p",[s._v("setPingInterval 和 setPing 两个方法发生在 BaseLoadBalancer 初始化时，相当于接着上面逻辑继续。先说明执行逻辑，再看下不合理的地方")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124185708642.png",alt:""}})]),s._v(" "),a("p",[s._v("setupPingTask 用于定期执行对 Server 的 ping 任务，也就是检测 Server 是否可用")]),s._v(" "),a("p",[s._v("个人觉得在 setPingInterval 中没有必要执行 setupPingTask 方法")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124190554174.png",alt:""}})]),s._v(" "),a("p",[s._v("作出上述结论有以下依据：")]),s._v(" "),a("ol",[a("li",[s._v("第一次执行 setPingInterval 时，ping 必然为空，那么会在 canSkipPing 中返回 True，继而直接结束 setPingInterval 方法")]),s._v(" "),a("li",[s._v("后来想了下，会不会在别的地方引用，需要强制刷新，然鹅全局搜索了下引用，只有在此次初始化时调用，当然不排除别的依赖包会使用此方法")]),s._v(" "),a("li",[s._v("综上所述，setPingInterval 执行设置 Ping 任务的方法无意义")])]),s._v(" "),a("p",[s._v("另外还有一点，作者感觉代码中调用的方法没有实际意义。和上述类似，都是在 ping 为空时执行了 setPingInterval 方法")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20210124192423863.png",alt:""}})]),s._v(" "),a("p",[s._v("以上这两点是笔者跟源码时，发现不妥当的地方，所以在这里占了一些篇幅说明，主要是想表达两点自己的想法给读者朋友")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("不要对源码有敬畏之心，应该有敬畏之心的是生产环境！")]),s._v(" 不要感觉看框架源码是一件高不可攀的事情，其实有时候你理解不了的代码，可能只是多人维护后，混乱的产物，条件允许的情况下，还是要多跟进源码去看一看")]),s._v(" "),a("li",[a("strong",[s._v("直言说出自己的见解")]),s._v("，如果只有自己去想，那么很可能没有答案，通过文章间接的方式让更多小伙伴看到，指正错误言论亦或者得到肯定")])]),s._v(" "),a("h2",{attrs:{id:"结言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结言"}},[s._v("#")]),s._v(" 结言")]),s._v(" "),a("p",[s._v("整体来看，文章更 "),a("strong",[s._v("注重表达设计思想以及源码分析")]),s._v("，所以阅读文章需要一定的源码功底。同时文章是针对问题而展开叙述，哪怕源码不理解也能有所收获")]),s._v(" "),a("p",[s._v("Ribbon 这块内容从初始化负载均衡客户端 ILoadBalancer 说起，讲述了初始化过程中具体的内容，包括如何开启 IPing 定时器以及服务列表更新定时器")]),s._v(" "),a("p",[s._v("另外通过源码查看到 Ribbon 的服务列表其实是向 "),a("strong",[s._v("Nacos 提供的接口发起服务调用")]),s._v(" 获取并保存到本地缓存，继而牵引出如何保证不健康实例下线："),a("strong",[s._v("IPing 定时器和服务更新定时器")])]),s._v(" "),a("p",[s._v("文末章节说了下请求 Ribbon 负载均衡的全链路以及如何自己定义一个负载均衡算法。最最后面也说了下自己看源码过程中对 SpringCloud IPing 感觉无意义的代码，"),a("em",[s._v("当然，不排除是为了别的包集成而留下的")])])])}),[],!1,null,null,null);t.default=e.exports}}]);