(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{406:function(s,t,a){"use strict";a.r(t);var n=a(45),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("分布式锁相信大家一定不会陌生, 想要用好或者自己写一个却没那么简单")]),s._v(" "),a("p",[s._v("想要达到上述的条件, 一定要 "),a("strong",[s._v("掌握分布式锁的应用场景")]),s._v(", 以及分布式锁的不同实现, 不同实现之间有什么区别")]),s._v(" "),a("h2",{attrs:{id:"分布式锁场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁场景"}},[s._v("#")]),s._v(" 分布式锁场景")]),s._v(" "),a("p",[s._v("如果想真正了解分布式锁, 需要结合一定场景; 举个例子, 某夕夕上抢购 AirPods Pro 的 100 元优惠券")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20200921095428315.png",alt:""}})]),s._v(" "),a("p",[s._v("如果使用下面这段代码当作抢购优惠券的后台程序, 我们一起看一下, 可能存在什么样的问题")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E4%BC%98%E6%83%A0%E5%88%B8%E6%8A%A2%E8%B4%AD.png",alt:""}})]),s._v(" "),a("p",[s._v("很明显的就是这段流程在并发场景下并不安全, 会导致优惠券发放超过预期, 类似电商抢购超卖问题")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E6%83%B3%E6%83%B3%E5%B0%B1%E6%BF%80%E5%8A%A8.jpg",alt:""}})]),s._v(" "),a("p",[s._v("想一哈有什么方式可以避免这种分布式下超量问题?")]),s._v(" "),a("p",[a("strong",[s._v("互斥加锁")]),s._v(", Java 中互斥锁的语义就是 "),a("strong",[s._v("同一时间, 只允许一个客户端对资源进行操作")])]),s._v(" "),a("p",[s._v("比如 Java 中的关键字 "),a("strong",[s._v("Synchronized")]),s._v(", 以及 JUC Lock 包下的 ReentrantLock 都可以实现互斥锁")]),s._v(" "),a("h3",{attrs:{id:"jvm-锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-锁"}},[s._v("#")]),s._v(" JVM 锁")]),s._v(" "),a("p",[s._v("如图所示, 加入 JVM synchronized 锁确实可以解决单机下并发问题")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/synchronized.png",alt:""}})]),s._v(" "),a("p",[s._v("但是生产环境为了保证服务高可用, 起码要 "),a("strong",[s._v("部署两台服务")]),s._v(", 这样的话 synchronized 就不起作用了, 因为它的 "),a("strong",[s._v("作用域只是单个 JVM")])]),s._v(" "),a("p",[s._v("分布式情况下只能通过 "),a("strong",[s._v("分布式锁")]),s._v(" 来解决多个服务资源共享的问题了")]),s._v(" "),a("blockquote",[a("p",[s._v("如果死磕单服务, 那没的说, 分布式锁就是浮云 ☁️")])]),s._v(" "),a("h2",{attrs:{id:"分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[s._v("#")]),s._v(" 分布式锁")]),s._v(" "),a("p",[s._v("分布式锁的定义:")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("保证同一时间只能有一个客户端对共享资源进行操作")])])]),s._v(" "),a("p",[s._v("比对刚才举的例子, 不论部署多少台优惠券服务, 只会有 "),a("strong",[s._v("一台服务能够对优惠券数量进行增删操作")])]),s._v(" "),a("p",[s._v("另外有几点要求也是必须要满足的:")]),s._v(" "),a("p",[s._v("1、**不会发生死锁。**即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁")]),s._v(" "),a("p",[s._v("2、**具有容错性。**只要大部分的Redis节点正常运行，客户端就可以加锁和解锁")]),s._v(" "),a("p",[s._v("3、**解铃还须系铃人。**加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了")]),s._v(" "),a("p",[s._v("分布式锁实现大致分为三种, Redis、Zookeeper、数据库, 文章以 Redis 展开分布式锁的讨论")]),s._v(" "),a("h2",{attrs:{id:"分布式锁演进史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁演进史"}},[s._v("#")]),s._v(" 分布式锁演进史")]),s._v(" "),a("p",[s._v("先来构思下分布式锁实现思路")]),s._v(" "),a("p",[s._v("首先我们必须保证同一时间只有一个客户端(部署的优惠券服务)操作数量加减")]),s._v(" "),a("p",[s._v("其次本次 "),a("strong",[s._v("客户端操作完成后")]),s._v(", 需要让 "),a("strong",[s._v("其它客户端继续执行")])]),s._v(" "),a("p",[s._v("1、客户端一存放一个标志位, 如果添加成功, 操作减优惠券数量操作")]),s._v(" "),a("p",[s._v("2、客户端二添加标志位失败, 本次减库存操作失败(或继续尝试获取等)")]),s._v(" "),a("p",[s._v("3、客户端一优惠券操作完成后, 需要将标志位释放, 以便其余客户端对库存进行操作")]),s._v(" "),a("h3",{attrs:{id:"第一版-setnx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一版-setnx"}},[s._v("#")]),s._v(" 第一版 setnx")]),s._v(" "),a("p",[s._v("向 Redis 中添加一个 lockKey 锁标志位, 如果添加成功则能够继续向下执行扣减优惠券数量操作, 最后再释放此标志位")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/setIfAbsent.png",alt:""}})]),s._v(" "),a("p",[s._v("由于使用的是 Spring 提供的 Redis 封装的 Start 包, 所有有些命令与 Redis 原生命令不相符")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setIfAbsent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setnx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("加了简单的几行代码, 一个简单的分布式锁的雏形就出来了")]),s._v(" "),a("h3",{attrs:{id:"第二版-expire"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二版-expire"}},[s._v("#")]),s._v(" 第二版 expire")]),s._v(" "),a("p",[s._v("上面第一版基于 setnx 命令实现分布式锁的缺陷也是很明显的, 那就是 "),a("strong",[s._v("一定情况下可能发生死锁")])]),s._v(" "),a("p",[s._v("画个图, 举个例子说明哈")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20201121112507681.png",alt:""}})]),s._v(" "),a("p",[s._v("上图说明, 线程1在成功获取锁后, 执行流程时异常结束, "),a("strong",[s._v("没有执行释放锁操作")]),s._v(", 这样就会 "),a("strong",[s._v("产生死锁")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E5%88%BA%E6%BF%80.jpg",alt:""}})]),s._v(" "),a("p",[s._v("如果方法执行异常导致的线程被回收, 那么可以将解锁操作放到 finally 块中")]),s._v(" "),a("p",[s._v("但是还有存在死锁问题, "),a("strong",[s._v("如果获得锁的线程在执行中, 服务被强制停止或服务器宕机, 锁依然不会得到释放")])]),s._v(" "),a("p",[s._v("这种极端情况下我们还是要考虑的, 毕竟不能只想着服务没问题对吧")]),s._v(" "),a("p",[s._v("对 Redis 的 "),a("strong",[s._v("锁标志位加上过期时间")]),s._v(" 就能很好的防止死锁问题, 继续更改下程序代码")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/expire.png",alt:""}})]),s._v(" "),a("p",[s._v("虽然 "),a("strong",[s._v("小红旗处")]),s._v(" 对分布式锁添加了过期时间, 但依然无法避免极端情况下的死锁问题")]),s._v(" "),a("p",[a("strong",[s._v("那就是如果在客户端加锁成功后, 还没有设置过期时间时宕机")])]),s._v(" "),a("p",[s._v("如果想要避免添加锁时死锁, 那就对添加锁标志位 & 添加过期时间命令 "),a("strong",[s._v("保证一个原子性, 要么一起成功, 要么一起失败")])]),s._v(" "),a("h3",{attrs:{id:"第三版-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三版-set"}},[s._v("#")]),s._v(" 第三版 set")]),s._v(" "),a("p",[s._v("我们的添加锁原子命令就要登场了, 从 Redis 2.6.12 版本起, 提供了可选的 "),a("strong",[s._v("字符串 set 复合命令")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("SET key value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("expiration EX seconds"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("PX milliseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("XX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可选参数如下:")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("EX:")]),s._v(" 设置超时时间，单位是秒")]),s._v(" "),a("li",[a("strong",[s._v("PX:")]),s._v(" 设置超时时间，单位是毫秒")]),s._v(" "),a("li",[a("strong",[s._v("NX:")]),s._v(" IF NOT EXIST 的缩写，只有 "),a("strong",[s._v("KEY不存在的前提下")]),s._v(" 才会设置值")]),s._v(" "),a("li",[a("strong",[s._v("XX:")]),s._v(" IF EXIST 的缩写，只有在 "),a("strong",[s._v("KEY存在的前提下")]),s._v(" 才会设置值")])]),s._v(" "),a("p",[s._v("继续完善分布式锁的应用程序, 代码如下:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/jedis_set.png",alt:""}})]),s._v(" "),a("p",[s._v("我使用的 "),a("strong",[s._v("2.0.9.RELEASE")]),s._v(" 版本的 SpringBoot, RedisTemplate 中不支持 set 复合命令, 所以临时换个 Jedis 来实现")]),s._v(" "),a("p",[a("strong",[s._v("加锁以及设置过期时间确实保证了原子性, 但是这样的分布式锁就没有问题了么?")])]),s._v(" "),a("p",[s._v("我们根据图片以及流程描述设想一下这个场景")]),s._v(" "),a("p",[s._v("1、线程一获取锁成功, 设置过期时间五秒, 接着执行业务逻辑")]),s._v(" "),a("p",[s._v("2、接着线程一获取锁后执行业务流程, 执行的时间超过了过期时间, 锁标志位过期进行释放, 此时线程二获取锁成功")]),s._v(" "),a("p",[s._v("3、然鹅此时线程一执行完业务后, 开始执行释放锁的流程, 然后顺手就把线程二获取的锁释放了")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E6%88%91%E5%95%A5%E4%B9%9F%E6%B2%A1%E5%B9%B2.jpg",alt:""}})]),s._v(" "),a("p",[s._v("如果线上真的发生上述问题, 那真的是xxx, 更甚者可能存在线程一将线程二的锁释放掉之后, 线程三获取到锁, 然后线程二执行完将线程三的锁释放")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E8%A1%8C%E4%BA%86%E8%A1%8C%E4%BA%86.jpg",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"第四版-verify-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四版-verify-value"}},[s._v("#")]),s._v(" 第四版 verify value")]),s._v(" "),a("p",[s._v("事当如今, 只能创建辨别客户端身份的唯一值了, 将加锁及解锁归一化, 上代码~")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/verify_value.png",alt:""}})]),s._v(" "),a("p",[s._v("这一版的代码相当于我们添加锁标志位时, 同时为每个客户端设置了 uuid 作为锁标志位的 val, 解锁时需要判断锁的 val 是否和自己客户端的相同, 辨别成功才会释放锁")]),s._v(" "),a("p",[s._v("但是上述代码执行业务逻辑如果抛出异常, 锁只能等待过期时间, 我们可以将解锁操作放到 finally 块")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/finally_del.png",alt:""}})]),s._v(" "),a("p",[s._v("大眼一看, 上上下下实现了四版分布式锁, 也该没问题了吧")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E5%A4%AA%E5%B9%B4%E8%BD%BB.jpg",alt:""}})]),s._v(" "),a("p",[s._v("真相就是: 解锁时,  "),a("strong",[s._v("由于判断锁和删除标志位并不是原子性的, 所以可能还是会存在误删")])]),s._v(" "),a("p",[s._v("1、线程一获取锁后, 执行流程balabala... 判断锁也是自家的, 这时 CPU 转头去做别的事情了, 恰巧线程一的锁过期时间到了")]),s._v(" "),a("p",[s._v("2、线程二此时顺理成章的获取到了分布式锁, 执行业务逻辑balabala...")]),s._v(" "),a("p",[s._v("3、线程一再次分配到时间片继续执行删除操作")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E6%83%8A%E5%96%9C%E6%84%8F%E5%A4%96.jpg",alt:""}})]),s._v(" "),a("p",[s._v("解决这种非原子操作的方式只能 "),a("strong",[s._v("将判断元素值和删除标志位当作一个原子操作")])]),s._v(" "),a("h3",{attrs:{id:"第五版-lua"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五版-lua"}},[s._v("#")]),s._v(" 第五版 lua")]),s._v(" "),a("p",[s._v("很不友好的是, del 删除操作并没有提供原子命令, 所以我们需要想点办法")]),s._v(" "),a("p",[s._v("Redis在 2.6 推出了脚本功能, 允许开发者使用 Lua 语言编写脚本传到 Redis 中执行")]),s._v(" "),a("p",[s._v("使用 Lua 脚本有什么好处呢?")]),s._v(" "),a("p",[a("strong",[s._v("1、减少网络开销")])]),s._v(" "),a("p",[s._v("原本我们需要向 Redis 服务请求多次命令, 可以将命令写在 Lua 脚本中, 这样执行只会发起一次网络请求")]),s._v(" "),a("p",[a("strong",[s._v("2、原子操作")])]),s._v(" "),a("p",[s._v("Redis 会将 Lua 脚本中的命令当作一个整体执行, 中间不会插入其它命令")]),s._v(" "),a("p",[a("strong",[s._v("3、复用(大家自己探索哈)")])]),s._v(" "),a("p",[s._v("客户端发送的脚步会存储 Redis 中, 其他客户端可以复用这一脚本而不需要使用代码完成相同的逻辑")]),s._v(" "),a("p",[s._v("那我们编写一个简单的 Lua 脚本实现原子删除操作")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/lua_atom.png",alt:""}})]),s._v(" "),a("p",[s._v("重点就在 Lua 脚本这一块, 重点说一下这块的逻辑")]),s._v(" "),a("p",[s._v("script 脚本就是我们在 Redis 中执行的 Lua 脚本, 后面跟的两个 List 分别是 KEYS、ARGV")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newArrayList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newArrayList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lockValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("KEYS[1]:")]),s._v(" lockKey")]),s._v(" "),a("p",[a("strong",[s._v("ARGV[1]:")]),s._v(" lockValue")]),s._v(" "),a("p",[s._v("代码不是很多, 也比较简单, 就是在 Java 中代码实现的逻辑放到了一个 Lua 脚本中")]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v(" 获取 KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 对应的 Val\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" cliVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v(" 判断 KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 与 ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 是否保持一致\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cliVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v(" 删除 KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'del'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'OK'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nil")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("到了这种程度, 已经可以放到一些并发量不大的项目中生产使用了")]),s._v(" "),a("h2",{attrs:{id:"todo-列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo-列表"}},[s._v("#")]),s._v(" TODO 列表")]),s._v(" "),a("p",[s._v("虽然上述代码已经很大程度上解决了分布式锁可能存在的一些问题")]),s._v(" "),a("p",[s._v("但是下述列出的问题部分就不是客户端代码范畴内的事情了")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如何实现可重入锁")])]),s._v(" "),a("li",[a("p",[s._v("如何解决代码执行锁超时")])]),s._v(" "),a("li",[a("p",[s._v("主从节点同步数据丢失导致锁丢失问题")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://images-machen.oss-cn-beijing.aliyuncs.com/%E5%A5%BD%E9%9A%BE%E5%95%8A.jpg",alt:""}})]),s._v(" "),a("p",[s._v("上述问题等下一篇介绍 Redisson 源码时会一一说明, 顺道向大家推出一款 "),a("strong",[s._v("Redis 官方推荐的客户端: Redisson")])]),s._v(" "),a("p",[s._v("Jedis... 等客户端平常使用是绰绰有余的, 但是在功能上还是和 Redisoon 比不了")]),s._v(" "),a("blockquote",[a("p",[s._v("并不是推荐一定要用 Redisson, 根据不同场景选用不同客户端")])]),s._v(" "),a("p",[s._v("Redisson 就是为分布式提供 "),a("strong",[s._v("各种不同锁以及多样化的技术支持,")]),s._v(" 感兴趣的小伙伴可以看一下 Giuhub 上的介绍, 挺详细的")]),s._v(" "),a("p",[s._v("下一篇文章会详细介绍 Redisson 分布式锁的加锁、解锁原理")]),s._v(" "),a("blockquote",[a("p",[s._v("看了 Redisson 的源码后简直了... 然后对之前项目的分布式锁做了重构, 在原有基础上增加了如下功能")])]),s._v(" "),a("ul",[a("li",[s._v("保证了加锁、解锁之间的原子性")]),s._v(" "),a("li",[s._v("可重入的分布式锁")]),s._v(" "),a("li",[s._v("分布式锁自动延期功能")])]),s._v(" "),a("h2",{attrs:{id:"文末总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文末总结"}},[s._v("#")]),s._v(" 文末总结")]),s._v(" "),a("p",[s._v("本篇文章从最简单的分布式锁说起, 一步一步的讲述存在的问题以及解决方式, 最终得到个基本可用的分布式锁")]),s._v(" "),a("p",[s._v("但是事无绝对, 对于分布式锁的应用, 还是推荐在 "),a("strong",[s._v("代码以及数据库表中添加兜底策略, 乐观锁等措施")])]),s._v(" "),a("p",[s._v("另外向大家推荐了一款功能强大的 Redis 客户端, 感兴趣的小伙伴可以引入试下 😊")])])}),[],!1,null,null,null);t.default=e.exports}}]);